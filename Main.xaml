<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GlobalMain" sap2010:WorkflowViewState.IdRef="Sequence_13">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="DT1" />
      <Variable x:TypeArguments="x:String" Name="filepath" />
    </Sequence.Variables>
    <Sequence DisplayName="StReadConfiguration" sap2010:WorkflowViewState.IdRef="Sequence_29">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="InputData" />
      </Sequence.Variables>
      <ui:MessageBox ChosenButton="{x:Null}" Buttons="Ok" Caption="Робот-аудитор Аэрофлот" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="Перед началом работы Робота закройте, пожалуйста, все файлы Excel и браузер MS Explorer, затем нажмите на OK" TopMost="True" />
      <ui:MessageBox ChosenButton="{x:Null}" Buttons="Ok" Caption="Робот-аудитор Аэрофлот" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="Выберите исходный файл" TopMost="True" />
      <ui:SelectFile DisplayName="Select File" Filter="All files (*.*)|*.*" sap2010:WorkflowViewState.IdRef="SelectFile_1" SelectedFile="[filepath]" />
      <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="GetDataFromExcel" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" WorkbookPath="[filepath]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="DoReadInputExcelTable" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="tablerange" />
              </Sequence.Variables>
              <ui:ExcelGetTableRange DisplayName="Get Table Range" sap2010:WorkflowViewState.IdRef="ExcelGetTableRange_1" IsPivot="False" Range="[tablerange]" SheetName="Параметры" TableName="InputData" />
              <ui:ExcelReadRange AddHeaders="True" DataTable="[DT1]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="[tablerange]" SheetName="Параметры" />
              <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;There are &quot; + DT1.Columns.Count.ToString + &quot;columns&quot;]" />
              <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;There are &quot; + DT1.Rows.Count.ToString + &quot;rows&quot;]" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
      </ui:ExcelApplicationScope>
    </Sequence>
    <Sequence DisplayName="StDataProcess" sap2010:WorkflowViewState.IdRef="Sequence_15">
      <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="Checks" DataTable="[DT1]" DisplayName="Add Data Column Status" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" MaxLength="100" Unique="False" />
      <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="TextStatus" DataTable="[DT1]" DisplayName="Add Data Column text status" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2" MaxLength="100" Unique="False" />
      <ui:OpenBrowser UiBrowser="{x:Null}" BrowserType="IE" DisplayName="Open Browser" Hidden="False" sap2010:WorkflowViewState.IdRef="OpenBrowser_3" NewSession="True" Private="True" Url="https://www.aeroflot.ru/ikm/?_preferredLocale=ru&amp;_preferredLanguage=ru">
        <ui:OpenBrowser.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_20">
              <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT1]" DisplayName="DataProcess&amp;Validation" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Sequence">
                      <Sequence DisplayName="InputValuesInBrower">
                        <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Airline'" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="3c1b150060c3fb839f49fd9455629d01" Selector="&lt;webctrl parentid='aviacompany_chosen' tag='SPAN' /&gt;" WaitForReady="COMPLETE" />
                          </ui:Click.Target>
                          <sap2010:WorkflowViewState.IdRef>Click_28</sap2010:WorkflowViewState.IdRef>
                        </ui:Click>
                        <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'Airline'" EmptyField="True" SendWindowMessages="False" SimulateType="False" Text="[&quot; &quot; + row(0).ToString  + “[k(enter)]”]">
                          <ui:TypeInto.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="e6ef88ca3a16cf70cbf5ab2f6c97d848" Selector="&lt;webctrl parentid='aviacompany_chosen' tag='INPUT' type='text' /&gt;" WaitForReady="COMPLETE" />
                          </ui:TypeInto.Target>
                          <sap2010:WorkflowViewState.IdRef>TypeInto_17</sap2010:WorkflowViewState.IdRef>
                        </ui:TypeInto>
                        <If Condition="[row(3).ToString.Equals(&quot;Да&quot;)]" DisplayName="Two-way or not">
                          <If.Then>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'BUTTON  roundTrip1Label'" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="192a2a4195f442c0dc017b5b22761399" Selector="&lt;webctrl id='roundTrip1Label' tag='BUTTON' /&gt;" WaitForReady="COMPLETE" />
                              </ui:Click.Target>
                              <sap2010:WorkflowViewState.IdRef>Click_29</sap2010:WorkflowViewState.IdRef>
                            </ui:Click>
                          </If.Then>
                          <If.Else>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'BUTTON  roundTrip0Label'" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="fbb1369c3ecdc2def5f47df350d36dd0" Selector="&lt;webctrl id='roundTrip0Label' tag='BUTTON' /&gt;" WaitForReady="COMPLETE" />
                              </ui:Click.Target>
                              <sap2010:WorkflowViewState.IdRef>Click_30</sap2010:WorkflowViewState.IdRef>
                            </ui:Click>
                          </If.Else>
                          <sap2010:WorkflowViewState.IdRef>If_10</sap2010:WorkflowViewState.IdRef>
                        </If>
                        <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Origin'" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="509d7a64a554142cbdfe3786d33fbe85" Selector="&lt;webctrl parentid='id_origin_chosen' tag='A' /&gt;" WaitForReady="COMPLETE" />
                          </ui:Click.Target>
                          <sap2010:WorkflowViewState.IdRef>Click_31</sap2010:WorkflowViewState.IdRef>
                        </ui:Click>
                        <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'Origin'" EmptyField="True" SendWindowMessages="False" SimulateType="False" Text="[row(1).ToString + &quot;[k(enter)]&quot;]">
                          <ui:TypeInto.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="3129b598fbfbfbdf90f8aa9735d5dc7f" Selector="&lt;webctrl parentid='id_origin_chosen' tag='INPUT' type='text' /&gt;" WaitForReady="COMPLETE" />
                          </ui:TypeInto.Target>
                          <sap2010:WorkflowViewState.IdRef>TypeInto_18</sap2010:WorkflowViewState.IdRef>
                        </ui:TypeInto>
                        <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Destination'" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="509d7a64a554142cbdfe3786d33fbe85" Selector="&lt;webctrl parentid='id_destination_chosen' tag='A' /&gt;" WaitForReady="COMPLETE" />
                          </ui:Click.Target>
                          <sap2010:WorkflowViewState.IdRef>Click_32</sap2010:WorkflowViewState.IdRef>
                        </ui:Click>
                        <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'Destination'" EmptyField="True" SendWindowMessages="False" SimulateType="False" Text="[row(2).ToString + &quot;[k(enter)]&quot;]">
                          <ui:TypeInto.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="8317b7280b7897a99c5ac2b936e7f4e9" Selector="&lt;webctrl parentid='id_destination_chosen' tag='INPUT' type='text' /&gt;" WaitForReady="COMPLETE" />
                          </ui:TypeInto.Target>
                          <sap2010:WorkflowViewState.IdRef>TypeInto_19</sap2010:WorkflowViewState.IdRef>
                        </ui:TypeInto>
                        <If Condition="[row(4).ToString.Equals(&quot;-&quot;)]" DisplayName="Transition">
                          <If.Else>
                            <Sequence>
                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'B'" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="9baf72fe15177f98cd50fec69fb7c60d" Selector="&lt;webctrl parentid='id_transfer_chosen' tag='B' /&gt;" WaitForReady="COMPLETE" />
                                </ui:Click.Target>
                                <sap2010:WorkflowViewState.IdRef>Click_33</sap2010:WorkflowViewState.IdRef>
                              </ui:Click>
                              <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'INPUT'" EmptyField="True" SendWindowMessages="False" SimulateType="False" Text="[row(4).ToString + &quot;[k(enter)]&quot;]">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="620ef55f669e796af1c844b4d751dfd6" Selector="&lt;webctrl parentid='id_transfer_chosen' tag='INPUT' type='text' /&gt;" WaitForReady="COMPLETE" />
                                </ui:TypeInto.Target>
                                <sap2010:WorkflowViewState.IdRef>TypeInto_20</sap2010:WorkflowViewState.IdRef>
                              </ui:TypeInto>
                              <sap2010:WorkflowViewState.IdRef>Sequence_34</sap2010:WorkflowViewState.IdRef>
                            </Sequence>
                          </If.Else>
                          <sap2010:WorkflowViewState.IdRef>If_11</sap2010:WorkflowViewState.IdRef>
                        </If>
                        <Switch x:TypeArguments="x:String" DisplayName="SwitchStatus" Expression="[row(5).ToString]">
                          <Switch.Default>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'BUTTON  memberStatus_1'" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="93a1d3bcc2b247ba72fc0181849e4d2a" Selector="&lt;webctrl id='memberStatus_1' tag='BUTTON' /&gt;" WaitForReady="COMPLETE" />
                              </ui:Click.Target>
                              <sap2010:WorkflowViewState.IdRef>Click_34</sap2010:WorkflowViewState.IdRef>
                            </ui:Click>
                          </Switch.Default>
                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" x:Key="Серебряный" ClickType="CLICK_SINGLE" DisplayName="Click 'BUTTON  memberStatus_2'" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="389a6de9f67ded489b4e1680448d01c5" Selector="&lt;webctrl id='memberStatus_2' tag='BUTTON' /&gt;" WaitForReady="COMPLETE" />
                            </ui:Click.Target>
                            <sap2010:WorkflowViewState.IdRef>Click_35</sap2010:WorkflowViewState.IdRef>
                          </ui:Click>
                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" x:Key="Золотой" ClickType="CLICK_SINGLE" DisplayName="Click 'BUTTON  memberStatus_3'" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="c0ce36c69fe1fef837fd1e334a1a8e6e" Selector="&lt;webctrl id='memberStatus_3' tag='BUTTON' /&gt;" WaitForReady="COMPLETE" />
                            </ui:Click.Target>
                            <sap2010:WorkflowViewState.IdRef>Click_36</sap2010:WorkflowViewState.IdRef>
                          </ui:Click>
                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" x:Key="Платиновый" ClickType="CLICK_SINGLE" DisplayName="Click 'BUTTON  memberStatus_4'" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="f5603af8b9f03ec18aa883810f1d32fd" Selector="&lt;webctrl id='memberStatus_4' tag='BUTTON' /&gt;" WaitForReady="COMPLETE" />
                            </ui:Click.Target>
                            <sap2010:WorkflowViewState.IdRef>Click_37</sap2010:WorkflowViewState.IdRef>
                          </ui:Click>
                          <sap2010:WorkflowViewState.IdRef>Switch`1_3</sap2010:WorkflowViewState.IdRef>
                        </Switch>
                        <sap2010:WorkflowViewState.IdRef>Sequence_35</sap2010:WorkflowViewState.IdRef>
                      </Sequence>
                      <Sequence DisplayName="ValidationsCells">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="isOrigin" />
                          <Variable x:TypeArguments="x:Boolean" Name="isDestination" />
                          <Variable x:TypeArguments="x:Boolean" Name="isPrefix" />
                          <Variable x:TypeArguments="ui:GenericValue" Name="textboxValue" />
                        </Sequence.Variables>
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text of Origin">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl parentid='id_origin_chosen' tag='SPAN' /&gt;" WaitForReady="COMPLETE" />
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="ui:GenericValue">[textboxValue]</OutArgument>
                          </ui:GetValue.Value>
                          <sap2010:WorkflowViewState.IdRef>GetValue_3</sap2010:WorkflowViewState.IdRef>
                        </ui:GetValue>
                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim e, c As Boolean&#xA;e = String.IsNullOrEmpty(textboxValue)&#xA;c = Not textboxValue.Contains(input)&#xA;result = e or c" DisplayName="Checking the origin textbox">
                          <ui:InvokeCode.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="input">[row(1).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="textboxValue">[textboxValue]</InArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="result">[isOrigin]</OutArgument>
                          </ui:InvokeCode.Arguments>
                          <sap2010:WorkflowViewState.IdRef>InvokeCode_3</sap2010:WorkflowViewState.IdRef>
                        </ui:InvokeCode>
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text of Destination">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl parentid='id_destination_chosen' tag='SPAN' /&gt;" WaitForReady="COMPLETE" />
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="ui:GenericValue">[textboxValue]</OutArgument>
                          </ui:GetValue.Value>
                          <sap2010:WorkflowViewState.IdRef>GetValue_4</sap2010:WorkflowViewState.IdRef>
                        </ui:GetValue>
                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim e, c As Boolean&#xA;e = String.IsNullOrEmpty(textboxValue)&#xA;c = Not textboxValue.Contains(input)&#xA;result = e or c" DisplayName="Checking the destination textbox">
                          <ui:InvokeCode.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="input">[row(2).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="textboxValue">[textboxValue]</InArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="result">[isDestination]</OutArgument>
                          </ui:InvokeCode.Arguments>
                          <sap2010:WorkflowViewState.IdRef>InvokeCode_4</sap2010:WorkflowViewState.IdRef>
                        </ui:InvokeCode>
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[isPrefix]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">[String.IsNullOrEmpty(row(6).ToString)]</InArgument>
                          </Assign.Value>
                          <sap2010:WorkflowViewState.IdRef>Assign_24</sap2010:WorkflowViewState.IdRef>
                        </Assign>
                        <If Condition="[isOrigin or isDestination or isPrefix]" DisplayName="Checking if empty">
                          <If.Then>
                            <Sequence>
                              <WriteLine DisplayName="Write Line" Text="Everything is not Ok" sap2010:WorkflowViewState.IdRef="WriteLine_12" />
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[row(9)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["Неверные входные данные"]</InArgument>
                                </Assign.Value>
                                <sap2010:WorkflowViewState.IdRef>Assign_25</sap2010:WorkflowViewState.IdRef>
                              </Assign>
                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" sap2010:Annotation.AnnotationText="Очищаем введенные данные, чтобы избежать нерелевантных табличных значений от предыдущих запросов" ClickType="CLICK_SINGLE" DisplayName="Click 'Очистить данные'" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="6e2912c8a01d6c8205b2a5b04cc954bb" Selector="&lt;webctrl id='resetButton' tag='BUTTON' /&gt;" WaitForReady="INTERACTIVE" />
                                </ui:Click.Target>
                                <sap2010:WorkflowViewState.IdRef>Click_38</sap2010:WorkflowViewState.IdRef>
                              </ui:Click>
                              <ui:Continue sap2010:WorkflowViewState.IdRef="Continue_2" />
                              <sap2010:WorkflowViewState.IdRef>Sequence_36</sap2010:WorkflowViewState.IdRef>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <WriteLine DisplayName="Write Line" Text="Everything is ok" sap2010:WorkflowViewState.IdRef="WriteLine_13" />
                          </If.Else>
                          <sap2010:WorkflowViewState.IdRef>If_12</sap2010:WorkflowViewState.IdRef>
                        </If>
                        <Sequence DisplayName="WaitingForTable">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Boolean" Name="toWait" />
                          </Sequence.Variables>
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[toWait]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                            <sap2010:WorkflowViewState.IdRef>Assign_26</sap2010:WorkflowViewState.IdRef>
                          </Assign>
                          <While Condition="[toWait]">
                            <Sequence>
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="attValue" />
                              </Sequence.Variables>
                              <ui:InjectJsScript InputParameter="{x:Null}" DisplayName="Inject Js Script" ScriptCode="&#xA;function f()&#xA;{&#xA;return document.getElementById('staticTableError').getAttribute('style');&#xA;}&#xA;">
                                <ui:InjectJsScript.ScriptOutput>
                                  <OutArgument x:TypeArguments="x:String">[attValue]</OutArgument>
                                </ui:InjectJsScript.ScriptOutput>
                                <ui:InjectJsScript.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                </ui:InjectJsScript.Target>
                                <sap2010:WorkflowViewState.IdRef>InjectJsScript_2</sap2010:WorkflowViewState.IdRef>
                              </ui:InjectJsScript>
                              <If Condition="[attValue.Equals(&quot;display: none;&quot;)]">
                                <If.Then>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[toWait]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                    <sap2010:WorkflowViewState.IdRef>Assign_27</sap2010:WorkflowViewState.IdRef>
                                  </Assign>
                                </If.Then>
                                <sap2010:WorkflowViewState.IdRef>If_13</sap2010:WorkflowViewState.IdRef>
                              </If>
                              <sap2010:WorkflowViewState.IdRef>Sequence_37</sap2010:WorkflowViewState.IdRef>
                            </Sequence>
                            <sap2010:WorkflowViewState.IdRef>While_2</sap2010:WorkflowViewState.IdRef>
                          </While>
                          <sap2010:WorkflowViewState.IdRef>Sequence_38</sap2010:WorkflowViewState.IdRef>
                        </Sequence>
                        <sap2010:WorkflowViewState.IdRef>Sequence_39</sap2010:WorkflowViewState.IdRef>
                      </Sequence>
                      <Sequence DisplayName="GettingResults">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="temp" />
                          <Variable x:TypeArguments="ui:UiElement" Name="table" />
                          <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="nums" />
                          <Variable x:TypeArguments="x:String" Name="prefix" />
                          <Variable x:TypeArguments="x:Boolean" Name="equalness" />
                          <Variable x:TypeArguments="x:Boolean" Name="emptyness" />
                        </Sequence.Variables>
                        <WriteLine DisplayName="Write Line" Text="[&quot;Start: Getting value&quot; + System.DateTime.Now.ToLongTimeString]" sap2010:WorkflowViewState.IdRef="WriteLine_14" />
                        <Sequence DisplayName="GettingValue">
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[prefix]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[row(6).ToString]</InArgument>
                            </Assign.Value>
                            <sap2010:WorkflowViewState.IdRef>Assign_28</sap2010:WorkflowViewState.IdRef>
                          </Assign>
                          <ui:WaitUiElementAppear DisplayName="Find Table with values" FoundElement="[table]" WaitActive="False" WaitVisible="False">
                            <ui:WaitUiElementAppear.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl id='faresStaticTable' tag='DIV' /&gt;" WaitForReady="COMPLETE" />
                            </ui:WaitUiElementAppear.Target>
                            <sap2010:WorkflowViewState.IdRef>WaitUiElementAppear_5</sap2010:WorkflowViewState.IdRef>
                          </ui:WaitUiElementAppear>
                          <Assign DisplayName="Assign Split text by &quot;Prefix&quot;">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[temp]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[table.Get("aaname").ToString.Split({prefix}, StringSplitOptions.None)(1)]</InArgument>
                            </Assign.Value>
                            <sap2010:WorkflowViewState.IdRef>Assign_29</sap2010:WorkflowViewState.IdRef>
                          </Assign>
                          <ui:Matches DisplayName="Getting the first result" Input="[temp]" Pattern="[0-9]+" RegexOption="IgnoreCase, Compiled" Result="[nums]" sap2010:WorkflowViewState.IdRef="Matches_3" />
                          <sap2010:WorkflowViewState.IdRef>Sequence_40</sap2010:WorkflowViewState.IdRef>
                        </Sequence>
                        <Sequence DisplayName="CheckingInputs">
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[equalness]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">[row(7).ToString.Equals(nums(0).ToString)]</InArgument>
                            </Assign.Value>
                            <sap2010:WorkflowViewState.IdRef>Assign_30</sap2010:WorkflowViewState.IdRef>
                          </Assign>
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[emptyness]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">[String.IsNullOrEmpty(row(7).ToString)]</InArgument>
                            </Assign.Value>
                            <sap2010:WorkflowViewState.IdRef>Assign_31</sap2010:WorkflowViewState.IdRef>
                          </Assign>
                          <If sap2010:Annotation.AnnotationText="If there is a mistake in the input data, it will be corrected by next validation's step." Condition="[equalness]" DisplayName="WritingStatus">
                            <If.Then>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[row(9)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["Сверка пройдена"]</InArgument>
                                </Assign.Value>
                                <sap2010:WorkflowViewState.IdRef>Assign_32</sap2010:WorkflowViewState.IdRef>
                              </Assign>
                            </If.Then>
                            <If.Else>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[row(9)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["Добавленно значение"]</InArgument>
                                </Assign.Value>
                                <sap2010:WorkflowViewState.IdRef>Assign_33</sap2010:WorkflowViewState.IdRef>
                              </Assign>
                            </If.Else>
                            <sap2010:WorkflowViewState.IdRef>If_14</sap2010:WorkflowViewState.IdRef>
                          </If>
                          <If Condition="[equalness or emptyness]" DisplayName="CheckingMiles">
                            <If.Then>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[row(8)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[TRUE]</InArgument>
                                </Assign.Value>
                                <sap2010:WorkflowViewState.IdRef>Assign_34</sap2010:WorkflowViewState.IdRef>
                              </Assign>
                            </If.Then>
                            <If.Else>
                              <Sequence>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[row(8)]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[FALSE]</InArgument>
                                  </Assign.Value>
                                  <sap2010:WorkflowViewState.IdRef>Assign_35</sap2010:WorkflowViewState.IdRef>
                                </Assign>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[row(9)]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">["Выявлено расхождение"]</InArgument>
                                  </Assign.Value>
                                  <sap2010:WorkflowViewState.IdRef>Assign_36</sap2010:WorkflowViewState.IdRef>
                                </Assign>
                                <sap2010:WorkflowViewState.IdRef>Sequence_41</sap2010:WorkflowViewState.IdRef>
                              </Sequence>
                            </If.Else>
                            <sap2010:WorkflowViewState.IdRef>If_15</sap2010:WorkflowViewState.IdRef>
                          </If>
                          <sap2010:WorkflowViewState.IdRef>Sequence_42</sap2010:WorkflowViewState.IdRef>
                        </Sequence>
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[row(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[nums(0)]</InArgument>
                          </Assign.Value>
                          <sap2010:WorkflowViewState.IdRef>Assign_37</sap2010:WorkflowViewState.IdRef>
                        </Assign>
                        <WriteLine DisplayName="Write Line" Text="[&quot;End: Getting value&quot; + System.DateTime.Now.ToLongTimeString]" sap2010:WorkflowViewState.IdRef="WriteLine_15" />
                        <sap2010:WorkflowViewState.IdRef>Sequence_43</sap2010:WorkflowViewState.IdRef>
                      </Sequence>
                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" sap2010:Annotation.AnnotationText="Очищаем введенные данные, чтобы избежать нерелевантных табличных значений от предыдущих запросов" ClickType="CLICK_SINGLE" DisplayName="Click 'Очистить данные'" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="6e2912c8a01d6c8205b2a5b04cc954bb" Selector="&lt;webctrl id='resetButton' tag='BUTTON' /&gt;" WaitForReady="INTERACTIVE" />
                        </ui:Click.Target>
                        <sap2010:WorkflowViewState.IdRef>Click_39</sap2010:WorkflowViewState.IdRef>
                      </ui:Click>
                      <sap2010:WorkflowViewState.IdRef>Sequence_44</sap2010:WorkflowViewState.IdRef>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
              </ui:ForEachRow>
              <ui:CloseTab Browser="{x:Null}" DisplayName="Close Tab" sap2010:WorkflowViewState.IdRef="CloseTab_3" />
            </Sequence>
          </ActivityAction>
        </ui:OpenBrowser.Body>
      </ui:OpenBrowser>
    </Sequence>
    <Sequence DisplayName="StWriteResultData" sap2010:WorkflowViewState.IdRef="Sequence_17">
      <Sequence.Variables>
        <Variable x:TypeArguments="ui:GenericValue" Name="resPath" />
      </Sequence.Variables>
      <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Укажите название выходного файла c результатами" Title="Робот-аудитор Аэрофлот">
        <ui:InputDialog.Result>
          <OutArgument x:TypeArguments="ui:GenericValue">[resPath]</OutArgument>
        </ui:InputDialog.Result>
      </ui:InputDialog>
      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[resPath + &quot;.xlsx&quot;]" DisplayName="Copy File" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[filepath]" />
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" WorkbookPath="[resPath + &quot;.xlsx&quot;]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <Sequence.Variables>
                <Variable x:TypeArguments="ui:GenericValue" Name="currentRow" />
              </Sequence.Variables>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[currentRow]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">[2]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelInsertDeleteColumns DisplayName="Insert Status Column" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteColumns_1" Mode="Add" NoColumns="1" Position="1" SheetName="Параметры" />
              <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Параметры" Text="Статус" />
              <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT1]" DisplayName="For Each Row" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="statusCell" />
                      </Sequence.Variables>
                      <ui:ExcelWriteCell Cell="[&quot;I&quot; + currentRow.ToString]" DisplayName="Write Cell Miles" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Параметры" Text="[row(7).ToString]" />
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[statusCell]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["A" + currentRow.ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ExcelWriteCell Cell="[statusCell]" DisplayName="Write Cell Status" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Параметры" Text="[row(9).ToString]" />
                      <If Condition="[row(8).Equals(TRUE)]" sap2010:WorkflowViewState.IdRef="If_6">
                        <If.Then>
                          <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Green]" DisplayName="Set Range Color" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_1" Range="[statusCell +&quot;:&quot;+statusCell]" SheetName="Параметры" />
                        </If.Then>
                        <If.Else>
                          <ui:ExcelSetRangeColor Color="[System.Drawing.Color.Red]" DisplayName="Set Range Color" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_2" Range="[statusCell +&quot;:&quot;+statusCell]" SheetName="Параметры" />
                        </If.Else>
                      </If>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:GenericValue">[currentRow]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:GenericValue">[currentRow + 1]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
              </ui:ForEachRow>
              <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
      </ui:ExcelApplicationScope>
    </Sequence>
    <sads:DebugSymbol.Symbol>dytcXE1hY1xIb21lXERvd25sb2Fkc1xQd0MtQWVyb2Zsb3RcTWFpbi54YW1s4gFEA7kFDgIBAUkFYhADAfEBYwXrBBACAUDsBAW3BRACAQJNB02qAgMBiwJOB07UAQMBiAJPB0+YAQMBhQJQB2EiAwHyAWQHZKcCAwHtAWUHZbACAwHpAWYH6gQYAgFB8AQH9AQYAgE79QQH9QTFAQIBN/YEB7YFIgIBA01DTVsDAY0CTaoBTZgCAwGMAk5DTlsDAYoCTqoBTsIBAwGJAk+JAU+VAQMBhgJQsQFQvQEDAYMCVg1eGAMB8wFkkgFkmgEDAfABZKUBZKwBAwHuAWWSAWWeAQMB7AFlqQFlsAEDAeoBZrwBZogCAwHoAWwN5wQYAgFC8ASOAfAEvwECAT/yBDryBEMCAT3wBMYB8ATeAQIBPPUEO/UEWgIBOvUEtgH1BMIBAgE49gSiAfYEwQECATb8BA2zBRgCAQRaD1rOAQMB/gFbD1u/AQMB+AFcD1y2AQMB9gFdD12wAQMB9AFtD+UEHwIBROYED+YEdgIBQ4AFD4cFGAIBMogFD4gFygECAS6JBQ+JBZ4BAgEqigUPsQUfAgEGsgUPsgV5AgEFWpEBWp8BAwGBAlrAAVrLAQMBgAJaqgFatQEDAf8BWz5bRQMB/AFbmAFbpgEDAfoBW7EBW7wBAwH5AVxmXLMBAwH3AV1mXa0BAwH1AW1AbUcDAeYBcxXiBCACAUWFBUGFBUQCATWCBUKCBU4CATOIBa4BiAWxAQIBMYgFoQGIBaQBAgEwiAW8AYgFxwECAS+JBSeJBSsCAS2JBZMBiQWbAQIBLIkFggGJBY0BAgErigVAigVHAgEokAUVrgUgAgEHdBfCAiIDAb4BwwIXywMiAwGDAcwDF9AEIgIBSNEEF+AEIgIBRpQFF5QF2gECASSVBRecBSACASCdBRedBcIBAgEbngUXpQUcAgENpgUXrQUgAgEIdRmEASQDAeQBhQEZigEnAwHhAYsBGbEBHgMB2wGyARnBASQDAdkBwgEZxwEnAwHWAcgBGdcBJAMB1AHYARndAScDAdEB3gEZ+wEeAwHJAfwBGcACIgMBvwHKAhnSAicDAboB0wIZ2gIpAwG1AdsCGeMCJwMBsQHkAhnrAikDAawB7AIZ9AIiAwGoAfUCGZoDHgMBmAGbAxnJAyQDAYQB1QMZ1QO/AQMBgQHWAxnxAyQCAW7yAxnEBCQCAU7FBBnNBCICAUvOBBnOBL0BAgFJ3QSqAd0E2wECAUeUBS+UBVYCASeUBcQBlAXXAQIBJpQFswGUBb4BAgElmgVCmgVdAgEjlwVDlwVPAgEhnQUvnQU9AgEenQWsAZ0FvwECAR2dBZsBnQWmAQIBHJ4FJZ4FPAIBDqAFG6AF8wECARWjBRujBfEBAgEPqwVJqwVZAgELqAVKqAVWAgEJgQGsAYEB6AEDAeUBhwGsAYcB9QEDAeMBhQH+AYUBsQIDAeIBiwEniwFRAwHcAY0BHZwBKAMB3wGfAR2uASgDAd0BvgGsAb4B4wEDAdoBxAGsAcQB8wEDAdgBwgH9AcIBqQIDAdcB1AGsAdQB6AEDAdUB2gGsAdoB+AEDAdMB2AGCAtgBrgIDAdIB3gEn3gFQAwHKAeABHfgBKAMBywH8AWL8AXUDAcABjwIbngImAwHHAZ8CG64CJgMBxQGvAhu+AiYDAcMB/gEdjQIoAwHBAc8CTM8CWgMBuwHMAnPMAq0BAwG9AdUCUtUCYwMBuQHWAlnWAmcDAbgB1wJV1wJfAwG2AeACTOACWgMBsgHdAnPdArIBAwG0AeYCUuYCYwMBsAHnAlnnAmcDAa8B6AJV6AJkAwGtAfECRfECbAMBqwHuAkbuAlADAakB9QIn9QJQAwGZAfcCHZQDKAMBnwGXAx2XA4oBAwGdAZ8DG6cDJAMBlAGoAxvHAyMDAYUB1QNC1QONAQMBggHXAxvfAyQCAX3gAxvlAzQCAXnmAxvuAyQCAXXvAxvvA88BAgFv8wMb+wMkAgFq/AMbhAQkAgFmhQQbnQQgAgFdngQbwgQgAgFPygREygRNAgFNxwRFxwRNAgFMzgRCzgSLAQIBSqAFOKAFVgIBGqAFsgGgBdoBAgEXoAXlAaAF8AECARajBTijBVQCARSjBbABowXYAQIBEaMF4wGjBe4BAgEQmQGwAZkB5QEDAeABqwGwAasB5QEDAd4B4QEf8AEqAwHPAfEBH/YBLQMBzAGbAq4BmwLiAQMByAGrAq4BqwLiAQMBxgG7Aq4BuwLiAQMBxAGKArABigLkAQMBwgH4Ah/4ApABAwGmAfkCH4EDKAMBowGCAx+RAyoDAaEBkgMfkgNbAwGgAZcDRpcDWAMBngGkA0ekA0sDAZcBoQNIoQNQAwGVAakDHcUDKAMBiAGoAyyoAzYDAYYB3ANG3ANXAwGAAdkDR9kDTwIBfuADZeADbgIBe+IDdeIDqAECAXrrA0brA5ABAgF46ANH6ANNAgF27wNU7wNcAgFz7wOYAe8DoAECAXHvA2XvA20CAXD4A0f4A3ECAW31A0j1A1MCAWuBBEeBBG4CAWn+A0j+A1MCAWeFBKYBhQSzAQIBXocEH48EKAIBY5IEH5oEKAIBYJ4EKZ4EQwIBUKAEH6gEKAIBWqsEH78EKgIBU+0BsgHtAesBAwHQAfMBsgHzAfsBAwHOAfEBggLxAa4CAwHNAfgCSPgCXgMBpwH+Akr+AmUDAaUB+wJL+wJTAwGkAY4DsgGOA+MBAwGiAa0DH7UDMwMBkAG2Ax/DAyQDAYkBjARKjARdAgFliQRLiQRTAgFklwRKlwRhAgFilARLlARTAgFhpQRKpQRQAgFcogRLogRTAgFbrAQhtAQqAgFXtQQhvQQqAgFUrwNLrwNVAwGSAa0Ddq0D6AEDAZEBtgMttgNcAwGKAbgDI8ADLAMBjAGxBEyxBFMCAVmuBE2uBFUCAVi6BEy6BGQCAVa3BE23BFUCAVW9A0+9A1QDAY8BugNQugNYAwGNAQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="MessageBox_1" sap:VirtualizedContainerService.HintSize="414,59" />
      <sap2010:ViewStateData Id="MessageBox_2" sap:VirtualizedContainerService.HintSize="414,59" />
      <sap2010:ViewStateData Id="SelectFile_1" sap:VirtualizedContainerService.HintSize="414,22" />
      <sap2010:ViewStateData Id="ExcelGetTableRange_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_3" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="WriteLine_4" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="336,486">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_3" sap:VirtualizedContainerService.HintSize="414,595">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataColumn`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddDataColumn`1_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Click_28" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TypeInto_17" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_29" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Click_30" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_31" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TypeInto_18" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_32" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TypeInto_19" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_33" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="TypeInto_20" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="336,404">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_34" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Click_35" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Click_36" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Click_37" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Switch`1_3" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_35" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetValue_3" sap:VirtualizedContainerService.HintSize="242,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeCode_3" sap:VirtualizedContainerService.HintSize="242,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetValue_4" sap:VirtualizedContainerService.HintSize="242,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeCode_4" sap:VirtualizedContainerService.HintSize="242,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="WriteLine_12" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Click_38" sap:VirtualizedContainerService.HintSize="242,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Continue_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="264,440">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_13" sap:VirtualizedContainerService.HintSize="210.5,62" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="242,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="512,60" />
      <sap2010:ViewStateData Id="InjectJsScript_2" sap:VirtualizedContainerService.HintSize="464,96" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="464,210" />
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="486,470">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="512,630" />
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="242,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_14" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_5" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Matches_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_40" sap:VirtualizedContainerService.HintSize="242,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="242,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="242,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="242,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="WriteLine_15" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_43" sap:VirtualizedContainerService.HintSize="264,572">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_39" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_44" sap:VirtualizedContainerService.HintSize="222,452">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_2" sap:VirtualizedContainerService.HintSize="286.5,601">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CloseTab_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="222,238">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="OpenBrowser_3" sap:VirtualizedContainerService.HintSize="200,52" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="222,300">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InputDialog_1" sap:VirtualizedContainerService.HintSize="552,92" />
      <sap2010:ViewStateData Id="CopyFile_1" sap:VirtualizedContainerService.HintSize="552,22" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="ExcelInsertDeleteColumns_1" sap:VirtualizedContainerService.HintSize="516,22" />
      <sap2010:ViewStateData Id="ExcelWriteCell_3" sap:VirtualizedContainerService.HintSize="516,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_1" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="ExcelWriteCell_2" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="ExcelSetRangeColor_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ExcelSetRangeColor_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="464,209" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="486,787">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_3" sap:VirtualizedContainerService.HintSize="516,935">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelSaveWorkbook_1" sap:VirtualizedContainerService.HintSize="516,22" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="538,1410">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_4" sap:VirtualizedContainerService.HintSize="552,1519" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="222,360">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="262,440">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
            <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>